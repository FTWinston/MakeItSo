@import '../../general/mixins';

$landscapeDiceSize: calc((100vh - #{$usedVerticalSpace}) / 5 - 1rem);
$maxLandscapeDiceSize: calc((100vw - 1rem) / 8 - 1rem);
$portraitDiceSize: calc((100vw - 8rem) / 5 - 1vw);

.expandedDamage {
    display: grid;

    grid-gap: 0.5em;
    grid-template-columns: 1fr #{$maxLandscapeDiceSize};
    grid-template-rows: 1.5em 1fr 3em;
    grid-template-areas:
        "name dice"
        "combos dice"
        "buttons dice";

    @include portrait() {
        grid-template-columns: 1fr;
        grid-template-rows: 1.5em 1fr #{$portraitDiceSize} 3em;
        grid-template-areas:
            "name"
            "combos"
            "dice"
            "buttons";
    }
}

.expandedDamage__name {
    grid-area: name;
    font-size: 1.2em;
    font-weight: bold;
    text-align: center;
}

.expandedDamage__comboList {
    grid-area: combos;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
}

.expandedDamage__diceList {
    grid-area: dice;
    display: flex;
    flex-direction: column;

    justify-content: center;
    align-content: center;
    align-items: center;
}

.expandedDamage__diceActions {
    grid-area: buttons;
    display: flex;
    justify-content: space-evenly;
}

@include landscape() {
    .expandedDamage__diceList {
        flex-direction: column;
        overflow: hidden;
        align-content: center;
        flex-wrap: wrap;
    }

    .dice {
        width: $landscapeDiceSize;
        height: $landscapeDiceSize;
        
        max-width: $maxLandscapeDiceSize;
        max-height: $maxLandscapeDiceSize;

        margin-bottom: 0.5rem;
    }
}


@include portrait() {
    .expandedDamage__diceList {
        flex-direction: row;
        align-items: center;
    }

    .dice {
        width: $portraitDiceSize;
        height: $portraitDiceSize;
        margin-right: 1vw;
    }
}